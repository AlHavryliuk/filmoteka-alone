{"mappings":"oeAAAA,EAAA,S","sources":["src/libary.js"],"sourcesContent":["import './js/libaryManager';\nimport './js/modalPopup';\nimport './js/movieAPI';\nimport './js/refs';\nimport './js/renderMarkup';\nimport './js/serialize';\nimport './js/loader';\n\n// import { theMovieAPI } from './scripts/movieAPI';\n// import { modalPopup } from './scripts/modalPopup';\n// import { render } from './scripts/renderMarkup';\n// import { refs } from './scripts/refs';\n// import { savedFilms } from './scripts/serialize';\n// import { removeMovieFromLibary } from './scripts/libaryManager';\n\n// const movieAPI = new theMovieAPI();\n\n// const start = () => {\n//   if (document.location.href.includes(`libary`)) {\n//     refs.libaryWatchedBtn.addEventListener(`click`, savedFilms.filterMovieList);\n//     refs.libaryQueueBtn.addEventListener(`click`, savedFilms.filterMovieList);\n//     refs.libaryAllBtn.addEventListener(`click`, savedFilms.filterMovieList);\n//     // refs.libaryGalleryEl.addEventListener(`dblclick`, removeMovie);\n//     refs.libaryGalleryEl.addEventListener(`click`, openTrailerPopup);\n//     loadLibaryFilms();\n//   }\n// };\n\n// const removeMovie = id => removeMovieFromLibary(id);\n\n// const loadTrailer = async id => {\n//   const { results } = await movieAPI.fetchTreiler(id);\n//   console.log(results);\n//   let offTrailerKey = null;\n//   results.map(element => {\n//     if (element.name.toLowerCase().includes(`official trailer`)) {\n//       offTrailerKey = element.key;\n//     }\n//   });\n//   if (offTrailerKey === null) offTrailerKey = results[0].key;\n//   render.trailerPopup(offTrailerKey);\n// };\n\n// const openTrailerPopup = event => {\n//   const { target, ctrlKey } = event;\n//   const id = target.dataset.movieId;\n//   console.log(id != undefined && ctrlKey);\n//   if (id && ctrlKey) {\n//     removeMovie(id);\n//     return;\n//   }\n//   if (id != undefined) loadTrailer(id);\n//   modalPopup.toggleHide();\n//   modalPopup.addAnimattion();\n//   modalPopup.addModalListeners();\n// };\n\n// const loadLibaryFilms = async () => {\n//   refs.libaryGalleryEl.innerHTML = '';\n//   const films = savedFilms.getAllFilms();\n//   try {\n//     if (films.length === 0) return;\n//     for (let i = 0; i < films.length; i++) {\n//       const result = await movieAPI.fetchMovieById(films[i]);\n//       render.libaryCard(result);\n//     }\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n\n// // window.addEventListener(`load`, start)\n\n// console.log(`Ok`)\n"],"names":["parcelRequire"],"version":3,"file":"libary.2c42345f.js.map"}